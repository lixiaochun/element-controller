#
# Default datapath configuration for Broadcom chips
# Copyright 2014, 2015, 2016, 2017, Cumulus Networks, Inc.  All rights reserved.
#

# priority group ID assigned to each priority group
priority_group.control.id = 7
priority_group.service.id = 6
priority_group.llq.id = 5
priority_group.q4.id = 4
priority_group.q3.id = 3
priority_group.q2.id = 2
priority_group.q1.id = 1
priority_group.bulk.id = 0

# service pools assigned to each priority group
priority_group.control.service_pool = 1
priority_group.service.service_pool = 2
priority_group.llq.service_pool = 2
priority_group.bulk.service_pool = 0
priority_group.q1.service_pool = 0
priority_group.q2.service_pool = 0
priority_group.q3.service_pool = 0
priority_group.q4.service_pool = 0

# --- ingress buffer space allocations ---
#
# total buffer
#  - ingress minimum buffer allocations
#  - ingress service pool buffer allocations
#  - priority group ingress headroom allocations
#  - ingress global headroom allocations
#  = total ingress shared buffer size

# ingress service pool buffer allocation: percent of total buffer
# If a service pool has no priority groups, the buffer is added
# to the shared buffer space.
ingress_service_pool.0.percent = 0.0  # bulk
ingress_service_pool.1.percent = 3.0  # control
ingress_service_pool.2.percent = 2.0  # service

# priority group minimum buffer allocation: percent of total buffer cells
# priority group shared buffer allocation: percent of total shared buffer size
# if a priority group has no packet priority values assigned to it, the buffers will not be allocated

priority_group.control.ingress_buffer.min_percent = 0.0
priority_group.control.ingress_buffer.shared_percent = 10.0

priority_group.service.ingress_buffer.min_percent = 0.0
priority_group.service.ingress_buffer.shared_percent = 5.0

priority_group.llq.ingress_buffer.min_percent = 0.0
priority_group.llq.ingress_buffer.shared_percent = 5.0

# In Cisco MQC terms:
# min percent = bandwidth
# shared percent = bandwidth remaining

priority_group.q4.ingress_buffer.min_percent = 10.0
priority_group.q4.ingress_buffer.shared_percent = 30.0

priority_group.q3.ingress_buffer.min_percent = 10.0
priority_group.q3.ingress_buffer.shared_percent = 25.0

priority_group.q2.ingress_buffer.min_percent = 10.0
priority_group.q2.ingress_buffer.shared_percent = 20.0

priority_group.q1.ingress_buffer.min_percent = 10.0
priority_group.q1.ingress_buffer.shared_percent = 15.0

priority_group.bulk.ingress_buffer.min_percent = 10.0
priority_group.bulk.ingress_buffer.shared_percent = 10.0

# ingress buffer limits for ports with pause configured
# this configuration overrides default values
#     default minimum cell limit :  512
#     default shared cell limit  : 1024
# link_pause.port_group_0.minimum_cell_limit = 200
# link_pause.port_group_0.shared_cell_limit  = 600

# --- egress buffer space allocations ---
#
# total egress buffer
#  - minimum buffer allocations
#  = total service pool buffer size
#
# Service pool buffer allocation: percent of total
# buffer size.
egress_service_pool.0.percent = 90.0   # bulk
egress_service_pool.1.percent = 90.0   # control
egress_service_pool.2.percent = 90.0   # service

# Front panel port egress buffer limits enforced for each
# priority group.
priority_group.control.unlimited_egress_buffer = true
priority_group.service.unlimited_egress_buffer = true
priority_group.llq.unlimited_egress_buffer = false
priority_group.q4.unlimited_egress_buffer = false
priority_group.q3.unlimited_egress_buffer = false
priority_group.q2.unlimited_egress_buffer = false
priority_group.q1.unlimited_egress_buffer = false
priority_group.bulk.unlimited_egress_buffer = false

#
# if a priority group has no cos values assigned to it, the buffers will not be allocated
#

# min_percent is egress guarenteed bandwidth
# sp_percent is egress is queue length

# priority group minimum buffer allocation: percent of total buffer
priority_group.q4.egress_buffer.uc.min_percent  = 25.0
priority_group.q4.egress_buffer.mc.min_percent  = 2.0
priority_group.q4.egress_buffer.cpu.min_percent = 1.0

priority_group.q3.egress_buffer.uc.min_percent  = 20.0
priority_group.q3.egress_buffer.mc.min_percent  = 2.0
priority_group.q3.egress_buffer.cpu.min_percent = 1.0

priority_group.q2.egress_buffer.uc.min_percent  = 15.0
priority_group.q2.egress_buffer.mc.min_percent  = 2.0
priority_group.q2.egress_buffer.cpu.min_percent = 1.0

priority_group.q1.egress_buffer.uc.min_percent  = 10.0
priority_group.q1.egress_buffer.mc.min_percent  = 2.0
priority_group.q1.egress_buffer.cpu.min_percent = 1.0

priority_group.bulk.egress_buffer.uc.min_percent  = 5.0
priority_group.bulk.egress_buffer.mc.min_percent  = 2.0
priority_group.bulk.egress_buffer.cpu.min_percent = 1.0

# Priority group service pool buffer limits: percent of the
# assigned service pool.
priority_group.q4.egress_buffer.uc.sp_percent = 25.0
priority_group.q4.egress_buffer.mc.sp_percent = 4.0
priority_group.q4.egress_buffer.cpu.sp_percent = 2.0

priority_group.q3.egress_buffer.uc.sp_percent = 20.0
priority_group.q3.egress_buffer.mc.sp_percent = 3.0
priority_group.q3.egress_buffer.cpu.sp_percent = 2.0

priority_group.q2.egress_buffer.uc.sp_percent = 15.0
priority_group.q2.egress_buffer.mc.sp_percent = 3.0
priority_group.q2.egress_buffer.cpu.sp_percent = 2.0

priority_group.q1.egress_buffer.uc.sp_percent = 10.0
priority_group.q1.egress_buffer.mc.sp_percent = 3.0
priority_group.q1.egress_buffer.cpu.sp_percent = 2.0

priority_group.bulk.egress_buffer.uc.sp_percent = 5.0
priority_group.bulk.egress_buffer.mc.sp_percent = 3.0
priority_group.bulk.egress_buffer.cpu.sp_percent = 2.0

# internal cos values mapped to egress queues
# multicast queue: same as unicast queue
cos_egr_queue.cos_0.uc  = 0
cos_egr_queue.cos_0.cpu = 0

cos_egr_queue.cos_1.uc  = 1
cos_egr_queue.cos_1.cpu = 1

cos_egr_queue.cos_2.uc  = 2
cos_egr_queue.cos_2.cpu = 2

cos_egr_queue.cos_3.uc  = 3
cos_egr_queue.cos_3.cpu = 3

cos_egr_queue.cos_4.uc  = 4
cos_egr_queue.cos_4.cpu = 4

cos_egr_queue.cos_5.uc  = 5
cos_egr_queue.cos_5.cpu = 5

cos_egr_queue.cos_6.uc  = 6
cos_egr_queue.cos_6.cpu = 6

cos_egr_queue.cos_7.uc  = 7
cos_egr_queue.cos_7.cpu = 7

# Enabling/disabling Denial of service (DOS) prevetion checks
# To change the default configuration:
# enable/disable the individual DOS checks.
dos.sip_eq_dip = false
dos.smac_eq_dmac = false
dos.tcp_hdr_partial = false
dos.tcp_syn_frag = false
dos.tcp_ports_eq = false
dos.tcp_flags_syn_fin = false
dos.tcp_flags_fup_seq0 = false
dos.tcp_offset1 = false
dos.tcp_ctrl0_seq0 = false
dos.udp_ports_eq = false
dos.icmp_frag = false
dos.icmpv4_length = false
dos.icmpv6_length = false
dos.ipv6_min_frag = false

# Specify a VxLan Routing Profile - the profile selected determines the
# maximum number of overlay next hops that can be allocated.
# This is supported only on TridentTwoPlus and Maverick
#
# Profile can be one of {'default', 'mode-1', 'mode-2', 'mode-3', 'disable'}
# default: 15% of the overall nexthops are for overlay.
# mode-1:  25% of the overall nexthops are for overlay.
# mode-2:  50% of the overall nexthops are for overlay.
# mode-3:  80% of the overall nexthops are for overlay.
# disable: VxLan Routing is disabled
#
# By default VxLan Routing is enabled with the default profile.
vxlan_routing_overlay.profile = default

