# pm_crmgen 環境定義書 ファイル形式バージョン: 1.1,,,,,,,,,,,,,,
#表 1-1 クラスタ設定　…　クラスタ・プロパティ,,,,,,,,,,,,,,
,PROPERTY,,,,,,,,,,,,,
,,name,,value,,,,,,,,,,
#,,項目,,設定内容,,,概要,,,,備考,,,
,,no-quorum-policy,,ignore,,,ノード数によるリソース割当て,,,,２台構成であればignoreでよい,,,
,,stonith-enabled,,false,,,障害ノード対処（STONITH制御）,,,,STONITHを利用しない,,,
,,,,,,,,,,,,,,
#表 2-1 クラスタ設定　…　リソース・デフォルト,,,,,,,,,,,,,,
,RSC_DEFAULTS,,,,,,,,,,,,,
,,name,,value,,,,,,,,,,
#,,項目,,設定内容,,,概要,,,,備考,,,
,,resource-stickiness,,INFINITY,,,リソース割当て,,,,"自動フェイルバックなし
※リソースが稼働するノードをころころ移動するのは、安定的なサービス提供悪影響のため",,,
,,migration-threshold,,1,,,リソース故障可能回数,,,,1回故障発生でF/O,,,
,,,,,,,,,,,,,,
#表 3-1 クラスタ設定　…　リソース構成,,,,,,,,,,,,,,
,RESOURCES,,,,,,,,,,,,,
,,resourceItem,resourceItem,resourceItem,id,,,,,,,,,
#,,リソース構成要素,,,id,,,概要,,,備考,,,
,,Group,,,grpEC,,,グループ定義,,,起動順はvipCheck、prmIP、prmECの順(停止は逆順),,,
,,,Primitive,,vipCheck,,,,,,,,,
,,,Primitive,,prmIP,,,リソース定義,,,,,,
,,,Primitive,,prmEC,,,,,,,,,
,,Clone,,,clnDiskd,,,クローン定義,,,Diskdは全ノードで動く必要があるのであるのでCloneとします。,,,
,,,Primitive,,prmDiskd,,,内蔵ディスク監視,,,,,,
,,,,,,,,,,,,,,
#表 4-1 クラスタ設定　…　リソース・パラメータ,,,,,,,,,,,,,,
,RSC_ATTRIBUTES,,,,,,,,,,,,,
,,id,,type,name,,value,,,,,,,
#,,リソースID,,ﾊﾟﾗﾒｰﾀ種別,項目,,設定内容,,,概要,,,,
,,,,,,,,,,,,,,
,,,,,,,,,,,,,,
,,,,,,,,,,,,,,
,,,,,,,,,,,,,,
#表 5-2 クラスタ設定　…　Primitiveリソース (id=prmEM),,,,,,,,,,,,,,
,PRIMITIVE,,,,,,,,,,,,,
,P,id,,class,,provider,,type,,,,,,
#,,リソースID,,class,,provider,,type,,概要,,,,
,,prmEC,,ocf,,heartbeat,,ec,,RAのファイル名はec。/lib/ocf/resource.d/heartbeatに配置,,,,
,A,type,name,,value,,,,,,,,,
#,,パラメータ種別,項目,,設定内容,,,,,概要,,,,
,,params,EC_CONTROL_SHELL,,/usr/ec_main/bin/ec_ctl.sh,,,,,EC制御用シェルの配置パス（フルパス）,,,,
,,,,,,,,,,（起動用モジュール・監視用モジュールのパスはec_ctl.shで指定する）,,,,
,,,,,,,,,,,,,,
,O,type,timeout,,interval,,on-fail,,start-delay,,,,,
#,,オペレーション,タイムアウト値,,監視間隔,,on_fail（障害時の動作）,,起動前処理,,備考,,,
,,start,60s,,0s,,restart,,,,,,,
,,monitor,60s,,60s,,restart,,,,タイムアウト値、監視間隔については要検討,,,
,,stop,1800s,,0s,,block,,,,実行中の処理は最後まで処理を実施した後に終了する必要があり、無視して系切り替えができない。そのため、保守者介在のblockとする。,,,
,,,,,,,,,,,,,,
#表 5-3 クラスタ設定　…　Primitiveリソース(id=prmDiskd),,,,,,,,,,,,,,
,PRIMITIVE,,,,,,,,,,,,,
,P,id,,class,,provider,,type,,,,,,
#,,リソースID,,class,,provider,,type,,概要,,,,
,,prmDiskd,,ocf,,pacemaker,,diskd,,内蔵ディスクの生存確認を行うためのRA　全ノードで動かさねばならないのでcloneとする,,,,
,A,type,name,,value,,,,,,,,,
#,,パラメータ種別,項目,,設定内容,,,,,概要,,,,
,,params,name,,diskcheck_status_internal,,,,,,,,,
,,,device,,/dev/vda1,,,,,環境に合わせて設定(例：/dev/sda1),,,,
,,,interval,,10,,,,,,,,,
,O,type,timeout,,interval,,on-fail,,start-delay,,,,,
#,,オペレーション,タイムアウト値,,監視間隔,,on_fail（障害時の動作）,,起動前処理,,備考,,,
,,start,60s,,0s,,restart,,,,監視間隔、タイムアウト値、ONFAIL挙動はデフォルトのものを利用,,,
,,monitor,60s,,10s,,restart,,,,,,,
,,stop,60s,,0s,,ignore,,,,,,,
,,,,,,,,,,,,,,
#表 5-4 クラスタ設定　…　Primitiveリソース (id=vipCheck),,,,,,,,,,,,,,
,PRIMITIVE,,,,,,,,,,,,,
,P,id,,class,,provider,,type,,,,,,
#,,リソースID,,class,,provider,,type,,概要,,,,
,,vipCheck,,ocf,,heartbeat,,VIPcheck,,STONITH非導入時、他ノードの生存確認をサービスLAN経由で行うためのRA,,,,
,A,type,name,,value,,,,,,,,,
#,,パラメータ種別,項目,,設定内容,,,,,概要,,,,
,,params,target_ip,,192.168.53.112,,,,,環境に合わせて、グループを組んでいるリソースに割り当てられた仮想IPを指定,,,,
,,,count,,1,,,,,標準値の「1」を指定,,,,
,,,wait,,10,,,,,標準値の「10」を指定,,,,
,O,type,timeout,,interval,,on-fail,,start-delay,,,,,
#,,オペレーション,タイムアウト値,,監視間隔,,on_fail（障害時の動作）,,起動前処理,,備考,,,
,,start,90s,,0s,,restart,,6s,,"STONITH機能を導入しないため、起動前処理に「6s」を指定
(STONITHを導入する場合は「4s」)",,,
,,,,,,,,,,,タイムアウト値についてはデフォルト値を利用,,,
,,,,,,,,,,,,,,
,,,,,,,,,,,,,,
#表 5-5 クラスタ設定　…　Primitiveリソース (id=priIP),,,,,,,,,,,,,,
,PRIMITIVE,,,,,,,,,,,,,
,P,id,,class,,provider,,type,,,,,,
#,,リソースID,,class,,provider,,type,,概要,,,,
,,prmIP,,ocf,,heartbeat,,IPaddr2,,STONITH非導入時、他ノードの生存確認をサービスLAN経由で行うためのRA,,,,
,A,type,name,,value,,,,,,,,,
#,,パラメータ種別,項目,,設定内容,,,,,概要,,,,
,,params,ip,,192.168.53.112,,,,,環境に合わせて、グループを組んでいるリソースに割り当てる仮想IPを指定,,,,
,,,nic,,eno1,,,,,サービスLANを接続するNICを指定,,,,
,,,cidr_netmask,,24,,,,,仮想IPのネットマスク,,,,
,O,type,timeout,,interval,,on-fail,,start-delay,,,,,
#,,オペレーション,タイムアウト値,,監視間隔,,on_fail（障害時の動作）,,起動前処理,,備考,,,
,,start,60s,,0s,,restart,,,,,,,
,,monitor,60s,,10s,,restart,,,,監視間隔、タイムアウト値、ONFAIL挙動はデフォルトのものを利用,,,
,,stop,60s,,0s,,fence,,,,,,,
,,,,,,,,,,,,,,
,,,,,,,,,,,,,,
#表 6-1 クラスタ設定　…　リソース配置制約,,,,,,,,,,,,,,
,LOCATION_EXPERT,,,,,,,,,,,,,
,,rsc,,score,bool_op,attribute,,,op,value,,role,,
#,,リソースID,,スコア,and/or,条件属性名,,,条件,条件値,,役割,,
,,grpEC,,200,,#uname,,,eq,EC1-1,,,,
,,,,100,,#uname,,,eq,EC1-2,,,,
,,,,-inf,or,diskcheck_status_internal,,,not_defined,,,,,
,,,,,,diskcheck_status_internal,,,eq,ERROR,,,,
,,,,,,,,,,,,,,
,,,,,,,,,,,,,,
,,,,,,,,,,,,,,
,,,,,,,,,,,,,,
#表 7-1 クラスタ設定　…　リソース同居制約,,,,,,,,,,,,,,
,COLOCATION,,,,,,,,,,,,,
,,rsc,,with-rsc,,score,,rsc-role,,with-rsc-role,,,,
#,,制約関連リソースID,,制約対象リソースID,,スコア（重み付け）,,制約関連リソースの役割,,制約対象リソースの役割,,備考,,
,,grpEC,,clnDiskd,,inf,,,,,,,,
,,grpEC,,vipCheck,,inf,,,,,,,,
,,,,,,,,,,,,,,
#表 8-1 クラスタ設定　…　リソース起動順序制約,,,,,,,,,,,,,,
,ORDER,,,,,,,,,,,,,
,,first-rsc,,then-rsc,,score,,first-action,,then-action,,symmetrical,,
#,,先に起動するリソース,,後に起動するリソース,,スコア（重み付け）,,先起動リソースのアクション,,後起動リソースのアクション,,起動と逆の順序で停止？（y/n）,,
,,clnDiskd,,grpEC,,0,,,,,,n,,
,,vipCheck,,prmEC,,INFINITY,,,,,,n,,
,,,,,,,,,,,,,,
,,,,,,,,,,,,,,
#,※1.  空行（中間ファイル時に、カンマのみの行）　→　OK,,,,,,,,,,,,,
#,※2.  コメント行は、列Aの先頭に「#」を記述する。,,,,,,,,,,,,,
